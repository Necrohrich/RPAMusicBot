import os
from typing import Optional

import disnake

from utils.audio import AudioSourceManager
from utils.functions import get_user_folder, ensure_voice

async def play_command(guild_players, inter: disnake.ApplicationCommandInteraction | disnake.MessageInteraction,
                       track_type: str, filename: str,
                       voice_channel: Optional[disnake.VoiceChannel] = None,
                       guild_id: Optional[int] = None):
    # –ü–æ–ø—ã—Ç–∫–∞ –¥–µ—Ñ–µ—Ä–∞ ‚Äî –º–æ–∂–µ—Ç —É–ø–∞—Å—Ç—å –µ—Å–ª–∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ü–∏—è —É–∂–µ –æ—Ç–≤–µ—á–µ–Ω–∞, –ø–æ—ç—Ç–æ–º—É –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º
    try:
        await inter.response.defer(ephemeral=True)
    except Exception:
        pass

    # –í—ã–±–∏—Ä–∞–µ–º voice_channel: –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç ‚Äî –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç, –∑–∞—Ç–µ–º inter.author.voice
    if voice_channel is None:
        author_voice = getattr(inter.author, "voice", None)
        if author_voice and getattr(author_voice, "channel", None):
            voice_channel = author_voice.channel

    if not voice_channel:
        # –±–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ (edit_original –º–æ–∂–µ—Ç –±—Ä–æ—Å–∏—Ç—å 404)
        try:
            await inter.edit_original_message("–í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!")
        except Exception:
            try:
                await inter.followup.send("–í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!", ephemeral=True)
            except Exception:
                try:
                    await inter.response.send_message("–í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!", ephemeral=True)
                except Exception:
                    pass
        return

    # —Ä–∞–∑—Ä–µ—à–∞–µ–º —è–≤–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è—Ç—å guild_id –ø—Ä–∏ –≤—ã–∑–æ–≤–µ –∏–∑ DM
    guild_id_resolved = guild_id or inter.guild_id or getattr(voice_channel.guild, "id", None)

    player = guild_players.get(guild_id_resolved)
    if isinstance(player, disnake.VoiceClient):
        # —É–ø–∞–∫–æ–≤–∫–∞ –≤ –º–µ–Ω–µ–¥–∂–µ—Ä
        player = AudioSourceManager(guild_id_resolved, voice=player)
        guild_players[guild_id_resolved] = player

    if not player:
        player = AudioSourceManager(guild_id_resolved)
        guild_players[guild_id_resolved] = player

    await ensure_voice(player, voice_channel)

    user_folder = get_user_folder(track_type, getattr(inter.author, "id", None))
    path = os.path.join(user_folder, filename)
    if not os.path.exists(path):
        try:
            await inter.edit_original_message("–¢—Ä–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        except Exception:
            try:
                await inter.followup.send("–¢—Ä–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)
            except Exception:
                try:
                    await inter.response.send_message("–¢—Ä–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)
                except Exception:
                    pass
        return

    await player.play(path, track_type=track_type)

    # –±–µ–∑–æ–ø–∞—Å–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    try:
        await inter.edit_original_message(f"üéµ –ü—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç—Å—è: `{filename}` –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ `{track_type}`")
    except Exception:
        try:
            await inter.followup.send(f"üéµ –ü—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç—Å—è: `{filename}` –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ `{track_type}`", ephemeral=True)
        except Exception:
            try:
                await inter.response.send_message(f"üéµ –ü—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç—Å—è: `{filename}` –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ `{track_type}`", ephemeral=True)
            except Exception:
                pass


async def pause_command(player, inter: disnake.ApplicationCommandInteraction | disnake.MessageInteraction):
    if not player or not player.voice or not player.voice.is_playing():
        await inter.response.send_message("–ù–µ—á–µ–≥–æ —Å—Ç–∞–≤–∏—Ç—å –Ω–∞ –ø–∞—É–∑—É.", ephemeral=True)
        return
    player.pause()
    await inter.response.send_message("‚è∏ –ü–∞—É–∑–∞", ephemeral=True)

async def resume_command(player, inter: disnake.ApplicationCommandInteraction | disnake.MessageInteraction):
    if not player or not player.voice or not player.voice.is_paused():
        await inter.response.send_message("–ù–µ—á–µ–≥–æ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å.", ephemeral=True)
        return
    player.resume()
    await inter.response.send_message("‚ñ∂ –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–æ", ephemeral=True)

async def stop_command(player, inter: disnake.ApplicationCommandInteraction | disnake.MessageInteraction):
    if not player or not player.voice or not player.voice.is_playing():
        await inter.response.send_message("–ù–µ—á–µ–≥–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å.", ephemeral=True)
        return
    player.stop()
    await inter.response.send_message("‚èπ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ", ephemeral=True)

async def loop_command(player, inter: disnake.ApplicationCommandInteraction | disnake.MessageInteraction, enable):
    if not player or not player.current_type:
        await inter.response.send_message("–ü–ª–µ–µ—Ä –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ –Ω–µ—Ç —Ç–µ–∫—É—â–µ–≥–æ —Ç—Ä–µ–∫–∞.", ephemeral=True)
        return
    player.set_loop(player.current_type, enable)
    status = "–≤–∫–ª—é—á—ë–Ω" if enable else "–≤—ã–∫–ª—é—á–µ–Ω"
    await inter.response.send_message(f"–ü–æ–≤—Ç–æ—Ä —Ç—Ä–µ–∫–∞ {status}.", ephemeral=True)

def ensure_audio_manager(guild_players: dict, guild_id: int, voice_client: Optional[disnake.VoiceClient] = None):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç AudioSourceManager –¥–ª—è guild_id. –ï—Å–ª–∏ –≤ guild_players –ª–µ–∂–∞–ª VoiceClient -
    –æ–±–æ—Ä–∞—á–∏–≤–∞–µ—Ç –µ–≥–æ –≤ AudioSourceManager. –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ—Ç ‚Äî —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä.
    –¢–∞–∫–∂–µ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ voice_client —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç player.voice.
    """
    player = guild_players.get(guild_id)
    # –µ—Å–ª–∏ –≤–¥—Ä—É–≥ —Ç–∞–º –ª–µ–∂–∏—Ç —Å—ã—Ä—ã–π VoiceClient ‚Äî —É–ø–∞–∫—É–µ–º –≤ AudioSourceManager
    if isinstance(player, disnake.VoiceClient):
        player = AudioSourceManager(guild_id, voice=player)
        guild_players[guild_id] = player

    if player is None:
        player = AudioSourceManager(guild_id, voice=voice_client)
        guild_players[guild_id] = player
    else:
        # –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–ª–∏ voice_client, –∞ —É –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –Ω–µ—Ç voice ‚Äî —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
        if voice_client is not None and getattr(player, "voice", None) is None:
            player.voice = voice_client

    return player