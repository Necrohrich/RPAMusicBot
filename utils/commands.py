import os

import disnake

from utils.audio import AudioSourceManager
from utils.functions import get_user_folder, ensure_voice

async def play_command(guild_players, inter: disnake.ApplicationCommandInteraction | disnake.MessageInteraction, track_type:str, filename: str):
    await inter.response.defer(ephemeral=True)
    guild_id = inter.guild_id

    if not inter.author.voice or not inter.author.voice.channel:
        await inter.edit_original_message("–í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!")
        return

    voice_channel = inter.author.voice.channel

    player = guild_players.get(guild_id)
    if not player:
        player = AudioSourceManager(guild_id)
        guild_players[guild_id] = player

    await ensure_voice(player, voice_channel)

    user_folder = get_user_folder(track_type, inter.author.id)
    path = os.path.join(user_folder, filename)
    if not os.path.exists(path):
        await inter.edit_original_message("–¢—Ä–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    await player.play(path, track_type=track_type)
    await inter.edit_original_message(f"üéµ –ü—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç—Å—è: `{filename}` –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ `{track_type}`")

async def pause_command(player, inter: disnake.ApplicationCommandInteraction | disnake.MessageInteraction):
    if not player or not player.voice or not player.voice.is_playing():
        await inter.response.send_message("–ù–µ—á–µ–≥–æ —Å—Ç–∞–≤–∏—Ç—å –Ω–∞ –ø–∞—É–∑—É.", ephemeral=True)
        return
    player.pause()
    await inter.response.send_message("‚è∏ –ü–∞—É–∑–∞", ephemeral=True)

async def resume_command(player, inter: disnake.ApplicationCommandInteraction | disnake.MessageInteraction):
    if not player or not player.voice or not player.voice.is_paused():
        await inter.response.send_message("–ù–µ—á–µ–≥–æ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å.", ephemeral=True)
        return
    player.resume()
    await inter.response.send_message("‚ñ∂ –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–æ", ephemeral=True)

async def stop_command(player, inter: disnake.ApplicationCommandInteraction | disnake.MessageInteraction):
    if not player or not player.voice or not player.voice.is_playing():
        await inter.response.send_message("–ù–µ—á–µ–≥–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å.", ephemeral=True)
        return
    player.stop()
    await inter.response.send_message("‚èπ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ", ephemeral=True)

async def loop_command(player, inter: disnake.ApplicationCommandInteraction | disnake.MessageInteraction, enable):
    if not player or not player.current_type:
        await inter.response.send_message("–ü–ª–µ–µ—Ä –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ –Ω–µ—Ç —Ç–µ–∫—É—â–µ–≥–æ —Ç—Ä–µ–∫–∞.", ephemeral=True)
        return
    player.set_loop(player.current_type, enable)
    status = "–≤–∫–ª—é—á—ë–Ω" if enable else "–≤—ã–∫–ª—é—á–µ–Ω"
    await inter.response.send_message(f"–ü–æ–≤—Ç–æ—Ä —Ç—Ä–µ–∫–∞ {status}.", ephemeral=True)